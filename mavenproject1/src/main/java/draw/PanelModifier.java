/*
 * PanelModifier.java
 *
 * Created on October 23, 2008, 11:45 AM
 */
package draw;

import java.lang.reflect.Method;
import java.util.ArrayList;
import javax.swing.JToggleButton;
import util.GetAndSetMethodHolder;
import java.io.*;

/**
 *
 * @author  nyffeldd
 */
public class PanelModifier extends javax.swing.JPanel {

    public static final String DIRECTORY = "x/Panels/";
    Panel panel;
    private JToggleButton[] panelControllers;
    ArrayList<GetAndSetMethodHolder> changeables;

    /** Creates new form PanelModifier */
    public PanelModifier(Panel p) {
        panel = p;
        initComponents();
        fillInSidePanel();
    }

    private void fillInSidePanel() {
        ArrayList temp = new ArrayList();
        ArrayList<Method> temp2 = new ArrayList<Method>();
        changeables = new ArrayList<GetAndSetMethodHolder>();
        Method[] methods = panel.getClass().getDeclaredMethods();
        for (int i = 0; i < methods.length; i++) {
            if (methods[i].getName().startsWith("set")) {
                temp.add(methods[i].getName().substring(3));
                temp2.add(methods[i]);
            }
        }

        for (int i = 0; i < methods.length; i++) {
            if (methods[i].getName().startsWith("get")) {
                int indexOfSet = temp.indexOf(methods[i].getName().substring(3));
                if (indexOfSet != -1) {
                    changeables.add(new GetAndSetMethodHolder(panel, methods[i].getName().substring(3), methods[i].getGenericReturnType() + "", methods[i], temp2.get(indexOfSet)));
                }
            }
        }

        resetSubControlPanel(changeables);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame4 = new javax.swing.JFrame();
        jFileChooser1 = new javax.swing.JFileChooser();
        savePanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton14 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        panelControlPanel = new javax.swing.JPanel();
        modPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();

        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });
        jFrame4.getContentPane().add(jFileChooser1, java.awt.BorderLayout.CENTER);

        jLabel9.setText("Name Your File");
        savePanel.add(jLabel9);

        jTextField2.setColumns(50);
        jTextField2.setText("FileName");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        savePanel.add(jTextField2);

        jButton14.setText("Save");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        savePanel.add(jButton14);

        jFrame4.getContentPane().add(savePanel, java.awt.BorderLayout.PAGE_START);

        setLayout(new java.awt.BorderLayout());

        panelControlPanel.setLayout(new java.awt.GridLayout(0, 1));
        jScrollPane1.setViewportView(panelControlPanel);

        add(jScrollPane1, java.awt.BorderLayout.WEST);

        modPanel.setLayout(new java.awt.BorderLayout());
        add(modPanel, java.awt.BorderLayout.CENTER);

        jButton12.setText("Save");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton12);

        jButton13.setText("Load");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton13);

        add(jPanel1, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents
    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        if (evt.getActionCommand().equalsIgnoreCase("CancelSelection")) {
            jFrame4.setVisible(false);
        } else if (evt.getActionCommand().equalsIgnoreCase("ApproveSelection")) {
            try {
                FileInputStream f = new FileInputStream(jFileChooser1.getSelectedFile());
                ObjectInputStream s = new ObjectInputStream(f);
                Panel temp = (Panel) s.readObject();
                s.close();

                jFrame4.setVisible(false);
                panel.setPanel(temp);
                resetSubControlPanel(changeables);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jFileChooser1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        save();
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        save();
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        //Save
        savePanel.setVisible(true);
        jFileChooser1.setVisible(false);
        Main.moveTo.setSelected(true);
        jFrame4.pack();
        jFrame4.setLocation(1600, 20);
        jFrame4.setVisible(true);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        //Load
        savePanel.setVisible(false);
        File file = new File(DIRECTORY);
        jFileChooser1.setCurrentDirectory(file);
        jFileChooser1.setVisible(true);
        Main.moveTo.setSelected(true);
        jFrame4.pack();
        jFrame4.setLocation(1600, 20);
        jFrame4.setVisible(true);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void save() {
        try {
            File file = new File(DIRECTORY + jTextField2.getText() + ".ser");
            file.createNewFile();
            FileOutputStream f = new FileOutputStream(file);
            ObjectOutputStream s = new ObjectOutputStream(f);
            s.writeObject(panel);
            s.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        jFrame4.setVisible(false);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JFrame jFrame4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JPanel modPanel;
    private javax.swing.JPanel panelControlPanel;
    private javax.swing.JPanel savePanel;
    // End of variables declaration//GEN-END:variables
    private void resetSubControlPanel(ArrayList changeables) {
        jScrollPane1.setVisible(false);
        panelControlPanel.removeAll();
        panelControllers = new JToggleButton[changeables.size()];
        for (int i = 0; i < changeables.size(); i++) {
            JToggleButton b = new JToggleButton(changeables.get(i).toString());
            b.addActionListener(new java.awt.event.ActionListener() {

                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    JToggleButton b = (JToggleButton) evt.getSource();
                    if (b.isSelected()) {
                        int index = 0;
                        for (int i = 0; i < panelControllers.length; i++) {
                            if (panelControllers[i] == b) {
                                index = i;
                            } else {
                                panelControllers[i].setSelected(false);
                            }
                        }
                        modPanel.setVisible(false);
                        modPanel.removeAll();
                        modPanel.add(getModifierPanel(index));
                        modPanel.setVisible(true);
                    }
                }
            });
            panelControllers[i] = b;
            panelControlPanel.add(b);
            jScrollPane1.setVisible(true);
        }
    }

    private javax.swing.JPanel getModifierPanel(int index) {
        GetAndSetMethodHolder o = changeables.get(index);

        if (o.getType().equals("class [I")) {
            return new draw.IntArrayModifier(o);
        } else if (o.getType().equals("int")) {
            return new draw.IntModifier(o);
        } else if (o.getType().equals("class [Lclts.Paintable;")) {
            return new draw.PaintableArrayModifier(o, panel);
        } else if (o.getType().equals("java.util.TreeSet<util.PaintableObjectAndMethodHolder>")) {
            return new draw.MethodArrayModifier((java.util.TreeSet<util.PaintableObjectAndMethodHolder>) o.get(), panel);
        }





        System.out.println(o.getType());
        return new draw.ObjectModifier(o.get());
    }
}
